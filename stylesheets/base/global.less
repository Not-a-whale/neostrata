html {
    height: 100%;
    font-size: @bodyFontSize;
}

body {
    margin: 0 auto;
    height: 100%;
    background-color: @bodyBackgroundColor;
    font-family: @fontFamily;
    font-size: @bodyFontSize;
    letter-spacing: 0.025em;
    color: @charcoal;
}

/* Replace with recommended base font size/container widths below

@media (min-width: 768px) and (max-width: 1399px){
    html, body{
        font-size: 12px;
    }
}
@media (min-width: 1400px){
    html, body{
        font-size: 16px;
    }
}
*/

/* Recommended base font sizes/container widths begin */
@media (min-width: 1901px) {
    html, body {font-size: 16px;}
    .container {width: 90%;}
}
@media (max-width: 1900px) {
    html, body {font-size: 13px;}
    .container {width: 90%;}
}
@media (max-width: 1700px) {
    html, body {font-size: 12px;}
    .container {width: 95%;}
}
@media (max-width: 1450px) {
    html, body {font-size: 11px;}
}
@media (max-width: 1250px) {
    html, body {font-size: 9px;}
}
@media (max-width: 992px) {
    html, body {font-size: 10px;}
    .container {width: 100%;}
}
@media (max-width: 768px) and (min-width: 500px) {
    html, body {font-size: 12px;}
}
/* Recommended base font sizes/container widths end */


h1, h2, h3, h4, h5, h6 {
    color: @textColor;
}

h1, .h1 {
  font-size: 4.5rem;
  line-height: 1.25em;
  font-weight: @fontWeightBold;
}

h2, .h2 {
  font-size: 3.43rem;
  line-height: 1.36em;
  font-weight: @fontWeightMedium;
}

h3, .h3 {
  font-size: 2.81rem;
  line-height: 1.33em;
  font-weight: @fontWeightMedium;
}

h4, .h4 {
  font-size: 2.125rem;
  line-height: 1.41em;
  font-weight: @fontWeightBold;
}

h5, .h5 {
  font-size: 1.5rem;
  line-height: 1.25em;
  font-weight: @fontWeightBold;
}

h6, .h6 {
  font-size: 1.25rem;
  line-height: auto;
  font-weight: @fontWeightMedium;
}

.dark {
  h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6, .p1, .p2, .p3, .p4, .p5 {
    color: @white;
  }
}
// Specialty Headings mixin
// TO DO - FINISH THIS MIXIN
.specialitHeading() {

  font-size: 2.25em;
  font-weight: @fontWeightBold;
  font-style: italic;
  text-transform: uppercase;
}
// End Specialty Headings mixin

a {
    color: @linkColor;
    text-decoration: underline;

    &:visited {
        color: @linkVisitedColor;
    }
    &:hover {
        color: @linkHoverColor;
    }
}

.dark a{
  color: @white;
  &:visited {
    color: @linkVisitedColor;
  }
  &:hover {
      color: @linkHoverColor;
  }
}

p {
    margin: @gutter/2 0;
}

// TO DO - FIX font waight - to book

.p1, .p2, .p3, .p4, .p5 {
  font-weight: @fontWeightBook;
}

.p1 {
  font-size: 2.18rem;
  line-height: 1.37em;
}

.p2 {
  font-size: 1.5rem;
  line-height: 1.5em;
}

.p3 {
  font-size: 1.625rem;
  line-height: 1.46em;
}

.p4 {
  font-size: 1.31rem;
  line-height: 1.43em;
}

.p5 {
  font-size: 1.125rem;
  line-height: 1.5em;
}

.neostrata-theme .mz-cms-row,
.row .mz-cms-row {
  max-width: 100%;
}


// preventing FOUT since web fonts are loading asynchronously
html.js.fontface.wf-loading body {
    visibility: hidden;
}

/* Inputs -------------------*/

// Form controls
// -------------------------

// Shared size and type resets
select,
textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"],
.mz-uneditable-input {
  display: inline-block;
  padding: 6px 6px;
  margin-bottom: 3px;
  font-family: @fontFamily;
}

// Reset appearance properties for textual inputs and textarea
// Reset height since textareas have rows
textarea {
  height: auto;
}
// Everything else
button,
textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"],
.mz-uneditable-input {
  border: 1px solid @inputBorder;

  // Focus state
  &:focus {
    outline: 0;
    outline: thin dotted \9; /* IE6-9 */
  }
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
  margin: 4px 0 0;
  *margin-top: 0; /* IE7 */
  margin-top: 1px \9; /* IE8-9 */
  line-height: normal;
  cursor: pointer;
}

// Reset width of input images, buttons, radios, checkboxes
input[type="file"],
input[type="image"],
input[type="submit"],
input[type="reset"],
input[type="button"],
input[type="radio"],
input[type="checkbox"] {
  width: auto; // Override of generic input selector
  font-family: @fontFamily;
}

// Set the height of select and file controls to match text inputs
select,
input[type="file"] {
  height: 30px; /* In IE7, the height of the select element cannot be changed by height, only font-size */
  *margin-top: 4px; /* For IE7, add top margin to align select with labels */
}

// Make select elements obey height by applying a border
select {
  width: 220px; // default input width + 10px of padding that doesn't get applied
  border: 1px solid @inputBorder;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
  height: auto;
}

button {
    font-family: @fontFamily;
}

//TODO Form elements

.form-row {
  padding: 30px;

  .form-element{
    position: relative;
    padding-left: 2rem;
    padding-top: 0.2rem;
    cursor: pointer;
    margin: 0;
  }

  input[type="checkbox"],
  input[type="radio"], {
    position: absolute;
    opacity: 0;
    left: -9999rem;

  }
  input[type="checkbox"] + label {
    .icon (before, @icon-check);
  }

  input[type="checkbox"] + label:before,
  input[type="radio"] + label:before {
    position: absolute;
    top: 3px;
    left: 3px;
    color: @charcoal;
    font-weight: bold;
    font-size: 1.1em;
    z-index: 1;
  }

  input[type="checkbox"] + label:after,
  input[type="radio"] + label:after {
    content: '';
    position: absolute;
    top: 0;
    left:0;
    height: 1.5rem;
    width: 1.5rem;
    border: 0.1875rem solid @inputBorder;
  }


  input[type="radio"] + label {
    .icon (before, @icon-dot-single);
  }

  input[type="radio"] + label:before {
    font-size: 1.80em;
    top: -1px;
    left: -2px;
  }

  input[type="radio"] + label:after {
    border-radius: 50%;
  }


  /* if "not checked" */
  input[type="checkbox"]:not(:checked) + label:before,
  input[type="radio"]:not(:checked) + label:before {
    content: '';
  }
  /* If "checked" */
  input[type="checkbox"]:checked + label:after,
  input[type="radio"]:checked + label:after {
    background: @mutedBlue;
  }


  input[type="text"] {
    color: @charcoal;
    margin: 0;
    padding: 0 4.44rem 0 2.875rem;
    border: 0.1875rem solid @inputBorder;
    font-weight: @fontWeightBook;
    height: 5.375rem;
    line-height: 3.33em;
    font-size: 1.31em;

    &::-webkit-input-placeholder {
      .placeholder-text();
    }
    &::-moz-placeholder { /* Firefox 19+ */
      .placeholder-text();
    }
    &:-moz-placeholder { /* Firefox 18- */
      .placeholder-text();
    }
    &:-ms-input-placeholder {
      .placeholder-text();
    }
  }

  .form-input {
    position: relative;

    &:before {
      position: absolute;
      right: 2.875rem;
      font-size: 1.5em;
      top: -0.25rem;
    }
  }
  &.actionable {
    .form-input {

      .icon(before, @icon-keyboard_arrow_right);

      &:before{
        font-size: 2em;
        top: -0.5rem;
        right: 2.5rem;
      }
      &:hover{
        &:before{
          color: @lightBlue;
        }
      }
    }
  }
  &.accepted {
    .form-input {
      .icon(before, @icon-check);
      input {
        background: @inputAccepted;
      }
    }
  }
  &.error {
    .form-input {
      .icon(before, @icon-close);
      input {
        background: @inputError;
      }
    }
  }
}

// TODO: JBZ: file these

.mz-placeholder {
    color: #aaaaaa;
}

.mz-page-headernote {
    margin-left: 133px;
	font-weight: normal;
}

.mz-auxiliary-text {
	font-size: 12px;
}

.mz-strikethrough {
	text-decoration: line-through;
}

.mz-credit-card-image-container{
    padding-right: 10px;
}
.mz-credit-card-image-container.active img{
  border: 1px solid #383333;
}
ul {
    list-style: none;
}

.slashHeading( @slashColor ) {
  display: inline-block;
  background-color: #efefef;
  min-width: 40%;


  &:after {
    content: "\00a0\00a0\00a0\00a0\00a0\00a0";
    background-image: linear-gradient(60deg, #efefef 35%, #ffffff 35%, #ffffff 50%, @slashColor 50%, @slashColor 65%, #ffffff 65%, #ffffff 100%);
    float: right;
  }
}

// NeoStrata colors
.charcoalSlashHeading {
  .slashHeading(@charcoal);
}
.mutedBlueSlashHeading {
  .slashHeading(@mutedBlue);
}
.lightGraySlashHeading {
  .slashHeading(@lightGray);
}
.midGraySlashHeading {
  .slashHeading(@midGray);
}
.tealSlashHeading {
  .slashHeading(@teal);
}
.lightBlueSlashHeading {
  .slashHeading(@lightBlue);
}
.purpleSlashHeading {
  .slashHeading(@purple);
}
.yellowOrangeSlashHeading {
  .slashHeading(@yellowOrange);
}
.darkBlueSlashHeading {
  .slashHeading(@darkBlue);
}
.redOrangeSlashHeading {
  .slashHeading(@redOrange);
}


// NeoStrata colors collection names

.skinActive .slashHeading {
  .slashHeading(@mutedBlue);
}
.restore .slashHeading {
  .slashHeading(@teal);
}
.clarify .slashHeading {
  .slashHeading(@lightBlue);
}
.correct .slashHeading {
  .slashHeading(@purple);
}
.enlighten .slashHeading {
  .slashHeading(@yellowOrange);
}
.resurface .slashHeading {
  .slashHeading(@darkBlue);
}
.defend .slashHeading {
  .slashHeading(@redOrange);
}
